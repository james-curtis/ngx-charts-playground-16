import { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';
export class JsonEditorNodeInfoComponent {
    constructor() {
        this.nameEditable = false;
        this.compressed = false;
        this.propertyNameChange = new EventEmitter();
    }
    updatePropertyName(name) {
        this.propertyNameChange.emit(name);
    }
}
JsonEditorNodeInfoComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-json-editor-node-info',
                template: "<!-- Property name/title -->\n<div class=\"info-name\" *ngIf=\"!nameEditable && title\">\n  <span class=\"name\"\n    ngx-tooltip\n    tooltipType=\"tooltip\"\n    [tooltipTitle]=\"title\"\n    [tooltipShowCaret]=\"false\"\n    tooltipCssClass=\"narrow\"\n    [tooltipShowTimeout]=\"750\">\n    {{ title }}\n  </span>\n\n  <ngx-icon\n    *ngIf=\"(description && compressed) || examples?.length\"\n    class=\"info-btn\"\n    fontIcon=\"info-filled\"\n    ngx-tooltip\n    tooltipType=\"popover\"\n    tooltipPlacement=\"top\"\n    [tooltipTemplate]=\"popoverTemplate\"\n  ></ngx-icon>\n\n  <ng-template #popoverTemplate>\n    <div class=\"json-editor--popover-template\">\n      <div *ngIf=\"description && compressed\">\n        <div class=\"label\">Description</div>\n        <div>{{ description }}</div>\n      </div>\n      <div *ngIf=\"(description && compressed) && examples?.length\" class=\"separator\"></div>\n      <ng-container *ngIf=\"examples?.length\">\n        <div class=\"label\">Examples</div>\n        <div *ngFor=\"let example of examples\">{{ example }}</div>          \n      </ng-container>\n    </div>\n  </ng-template>\n</div>\n\n<!-- Inline text editing-->\n<ngx-input\n  class=\"editable-name\"\n  type=\"text\"\n  *ngIf=\"nameEditable\"\n  [ngModel]=\"propertyName\"\n  (ngModelChange)=\"propertyNameChange.emit($event)\"\n></ngx-input>\n\n<!-- Type info -->\n<div class=\"info-type\">\n  <span class=\"type\">{{ type }}</span>\n  <ngx-icon\n    *ngIf=\"propertyName\"\n    class=\"dot-separator\"\n    fontIcon=\"circle-filled\"\n  ></ngx-icon>\n  <span class=\"property-name\"\n    ngx-tooltip\n    tooltipType=\"tooltip\"\n    [tooltipTitle]=\"propertyName\"\n    [tooltipShowCaret]=\"false\"\n    [tooltipShowTimeout]=\"750\"\n    tooltipCssClass=\"narrow\">\n      {{ propertyName }}\n    </span>\n</div>\n\n<!-- Description -->\n<span *ngIf=\"!compressed\" class=\"description\"\n  ngx-tooltip\n  tooltipType=\"tooltip\"\n  [tooltipTitle]=\"description\"\n  [tooltipShowCaret]=\"false\"\n  [tooltipShowTimeout]=\"750\"\n  tooltipCssClass=\"narrow\">\n  {{ description }}\n</span>",
                encapsulation: ViewEncapsulation.None,
                styles: ["ngx-json-editor-node-info{display:flex;flex-direction:column;justify-content:center}ngx-json-editor-node-info .info-name{display:flex;align-items:baseline}ngx-json-editor-node-info .info-name .info-btn{color:#818fa9;font-size:12px;margin-left:5px;position:relative;z-index:1;white-space:nowrap}ngx-json-editor-node-info .editable-name input,ngx-json-editor-node-info .name{font-weight:600;font-size:18px;line-height:23px;color:#f0f1f6}ngx-json-editor-node-info .description,ngx-json-editor-node-info .info-type,ngx-json-editor-node-info .name{display:inline-block;white-space:nowrap;text-overflow:ellipsis;max-width:calc(100% - 30px);overflow:hidden}ngx-json-editor-node-info .description,ngx-json-editor-node-info .dot-separator,ngx-json-editor-node-info .property-name{color:#a0aabe}ngx-json-editor-node-info .dot-separator{font-size:.2em;margin:0 5px;vertical-align:middle}ngx-json-editor-node-info .type{color:#f0f1f6}ngx-json-editor-node-info .editable-name{margin:0;padding-top:15px}ngx-json-editor-node-info .editable-name .ngx-input-hint{display:none}"]
            },] }
];
JsonEditorNodeInfoComponent.propDecorators = {
    nameEditable: [{ type: Input }],
    title: [{ type: Input }],
    propertyName: [{ type: Input }],
    description: [{ type: Input }],
    type: [{ type: Input }],
    examples: [{ type: Input }],
    compressed: [{ type: Input }],
    propertyNameChange: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS1pbmZvLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N3aW1sYW5lL25neC11aS9zcmMvbGliL2NvbXBvbmVudHMvanNvbi1lZGl0b3IvanNvbi1lZGl0b3ItZmxhdC9qc29uLWVkaXRvci1ub2RlLWZsYXQvbm9kZS10eXBlcy9ub2RlLWluZm8vbm9kZS1pbmZvLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUTFGLE1BQU0sT0FBTywyQkFBMkI7SUFOeEM7UUFRRSxpQkFBWSxHQUFHLEtBQUssQ0FBQztRQWtCckIsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUVULHVCQUFrQixHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7SUFLNUQsQ0FBQztJQUhDLGtCQUFrQixDQUFDLElBQVk7UUFDN0IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7WUFoQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLDZrRUFBeUM7Z0JBRXpDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOzthQUN0Qzs7OzJCQUVFLEtBQUs7b0JBR0wsS0FBSzsyQkFHTCxLQUFLOzBCQUdMLEtBQUs7bUJBR0wsS0FBSzt1QkFHTCxLQUFLO3lCQUdMLEtBQUs7aUNBR0wsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9uLCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduZ3gtanNvbi1lZGl0b3Itbm9kZS1pbmZvJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25vZGUtaW5mby5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25vZGUtaW5mby5jb21wb25lbnQuc2NzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIEpzb25FZGl0b3JOb2RlSW5mb0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIG5hbWVFZGl0YWJsZSA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpXG4gIHRpdGxlOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgcHJvcGVydHlOYW1lOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgZGVzY3JpcHRpb246IHN0cmluZztcblxuICBASW5wdXQoKVxuICB0eXBlOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgZXhhbXBsZXM6IHN0cmluZ1tdO1xuXG4gIEBJbnB1dCgpXG4gIGNvbXByZXNzZWQgPSBmYWxzZTtcblxuICBAT3V0cHV0KCkgcHJvcGVydHlOYW1lQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG5cbiAgdXBkYXRlUHJvcGVydHlOYW1lKG5hbWU6IHN0cmluZykge1xuICAgIHRoaXMucHJvcGVydHlOYW1lQ2hhbmdlLmVtaXQobmFtZSk7XG4gIH1cbn1cbiJdfQ==