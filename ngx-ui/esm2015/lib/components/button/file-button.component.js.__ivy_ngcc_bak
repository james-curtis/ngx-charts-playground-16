import { Component, Input, Output, EventEmitter, NgZone, ViewEncapsulation, ContentChild, TemplateRef, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { FileUploader } from '@swimlane/ng2-file-upload';
import { id } from '../../utils/id/id.util';
import { FileButtonStyleType } from './file-button-style.type';
export class FileButtonComponent {
    constructor(_ngZone) {
        this._ngZone = _ngZone;
        this.id = `input-${id()}`;
        this.styleType = FileButtonStyleType.standard;
        this.afterAddingFile = new EventEmitter();
        this.beforeUploadItem = new EventEmitter();
        this.successItem = new EventEmitter();
        this.errorItem = new EventEmitter();
        this.progressAll = new EventEmitter();
        this.FileButtonStyleType = FileButtonStyleType;
        this.progress = 0;
        this.fileName = '';
        this.fileOverDropzone = false;
        this._isItemSuccessful = false;
        this._disabled = false;
        this._multiple = false;
    }
    get disabled() {
        return this._disabled;
    }
    set disabled(disabled) {
        this._disabled = coerceBooleanProperty(disabled);
    }
    get multiple() {
        return this._multiple;
    }
    set multiple(multiple) {
        this._multiple = coerceBooleanProperty(multiple);
    }
    get isDisabled() {
        return this.disabled || this.uploader.isUploading;
    }
    get cssClasses() {
        return {
            'ngx-file-button': true,
            'standard-style': this.styleType === FileButtonStyleType.standard,
            'progress-style': this.styleType === FileButtonStyleType.progress,
            'show-progress': this.uploader && this.uploader.options.isHTML5,
            success: this._isItemSuccessful,
            active: this.uploader && this.uploader.isUploading
        };
    }
    ngOnInit() {
        if (!this.uploader && !this.options) {
            throw new Error('You must pass either an uploader instance or options.');
        }
        // if options were passed, init a new uploader
        if (!this.uploader && this.options) {
            this.uploader = new FileUploader(this.options);
        }
        // always remove after upload for this case
        this.uploader.options.removeAfterUpload = true;
        this.uploader.onAfterAddingFile = this.onAfterAddingFile.bind(this);
        this.uploader.onBeforeUploadItem = this.onBeforeUploadItem.bind(this);
        this.uploader.onProgressAll = this.onProgressAll.bind(this);
        this.uploader.onSuccessItem = this.onSuccessItem.bind(this);
        this.uploader.onErrorItem = this.onErrorItem.bind(this);
    }
    onAfterAddingFile(fileItem) {
        this._ngZone.run(() => {
            this.fileName = fileItem.file.name;
            this.afterAddingFile.emit({ fileItem });
        });
    }
    onBeforeUploadItem(fileItem) {
        this._ngZone.run(() => {
            this.beforeUploadItem.emit({ fileItem });
        });
    }
    onErrorItem(response, status, headers) {
        this.errorItem.emit({ response, status, headers });
    }
    onProgressAll(progress) {
        this._ngZone.run(() => {
            this.progress = progress;
            this.progressAll.emit({ progress });
        });
    }
    onSuccessItem(item, response, status, headers) {
        this._ngZone.run(() => {
            this._isItemSuccessful = true;
            setTimeout(() => {
                this.fileName = '';
                this._isItemSuccessful = false;
            }, 2500);
            this.successItem.emit({ item, response, status, headers });
        });
    }
    fileOverBase(event) {
        this.fileOverDropzone = event;
    }
    clearInput() {
        this.fileInput.nativeElement.value = '';
    }
}
FileButtonComponent.decorators = [
    { type: Component, args: [{
                exportAs: 'ngxFileButton',
                selector: 'ngx-file-button',
                template: "<div\n  *ngIf=\"dropzoneTemplate\"\n  ng2FileDrop\n  [class.file-over]=\"fileOverDropzone\"\n  [uploader]=\"uploader\"\n  (fileOver)=\"fileOverBase($event)\"\n>\n  <ng-template ng2FileDrop [ngTemplateOutlet]=\"dropzoneTemplate\" [ngTemplateOutletContext]=\"{ $implicit: uploader }\">\n  </ng-template>\n</div>\n\n<div *ngIf=\"!dropzoneTemplate\" [ngClass]=\"cssClasses\">\n  <div class=\"ngx-file-button-button\">\n    <input\n      #fileInput\n      ng2FileSelect\n      type=\"file\"\n      class=\"ngx-file-button-input\"\n      [disabled]=\"isDisabled\"\n      [multiple]=\"multiple\"\n      [id]=\"id + '-input'\"\n      [name]=\"name + '-input'\"\n      [uploader]=\"uploader\"\n    />\n    <label\n      [class.disabled]=\"isDisabled\"\n      [class.btn]=\"styleType === FileButtonStyleType.standard\"\n      [attr.for]=\"id + '-input'\"\n      class=\"ngx-file-button-label\"\n    >\n      <ng-content></ng-content>\n    </label>\n    <span class=\"ngx-file-button-text\" *ngIf=\"fileName\">\n      {{ fileName }}\n    </span>\n  </div>\n  <div class=\"ngx-file-button-fill\" [style.width.%]=\"progress\"></div>\n  <span class=\"icon-check\"></span>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: ["button{box-sizing:border-box;color:inherit;cursor:pointer;display:inline-block;position:relative;text-align:center;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;font:inherit;background:transparent;border:none;text-shadow:1px 1px rgba(0,0,0,.07)}button:active,button:focus{outline:none}.btn{box-sizing:border-box;color:#fff;display:inline-block;padding:.35em .55em;position:relative;text-align:center;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;font:inherit;font-size:.9em;font-weight:700;outline:none;line-height:1em;background:#455066;border:1px solid transparent;border-radius:2px;box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);transition:background-color .2s,box-shadow .2s}.btn .icon,.btn .ngx-icon{font-weight:400;vertical-align:middle;line-height:1em;font-size:.9em}.btn .icon:before,.btn .ngx-icon:before{font-weight:inherit}.btn .icon.has-text,.btn .icon.has-text-right,.btn .ngx-icon.has-text,.btn .ngx-icon.has-text-right{margin-right:.2em}.btn .icon.has-text-left,.btn .ngx-icon.has-text-left{margin-left:.2em}.btn::-moz-focus-inner{border:0;padding:0}.btn:focus{outline:none;box-shadow:0 1px 8px 0 rgba(0,0,0,.2),0 3px 4px 0 rgba(0,0,0,.14),0 3px 3px -2px rgba(0,0,0,.12)}.btn:active:hover:focus:not(.disabled),.btn:active:hover:focus:not([disabled]){cursor:pointer;background:#313847}.btn:active:hover:focus:not(.disabled).btn-primary,.btn:active:hover:focus:not([disabled]).btn-primary{background-color:#1483ff}.btn:active:hover:focus:not(.disabled).btn-warning,.btn:active:hover:focus:not([disabled]).btn-warning{background-color:#ffa814}.btn:active:hover:focus:not(.disabled).btn-danger,.btn:active:hover:focus:not([disabled]).btn-danger{background-color:#ff4514}.btn:active:hover:focus:not(.disabled).btn-link,.btn:active:hover:focus:not([disabled]).btn-link{background-color:transparent}.btn:active:hover:focus:not(.disabled).btn-bordered,.btn:active:hover:focus:not([disabled]).btn-bordered{border-color:#94c6ff;color:#94c6ff}.btn:active,.btn:focus,.btn:hover{text-decoration:none}.btn.small{font-size:.6em}.btn.large{font-size:1.3em}.btn.btn-primary{background-color:#479eff}.btn.btn-primary.btn-primary-gradient{background:linear-gradient(125.43deg,#54cdfc 10.86%,#479eff 49.11%)}.btn.btn-warning{background-color:#ffbb47;color:#07080b}.btn.btn-danger{background-color:#ff6d47}.btn.btn-link{background-color:transparent;box-shadow:none}.btn.btn-bordered,.btn.btn-primary.btn-bordered{border:1px solid #479eff;color:#479eff;background-color:transparent;box-shadow:none}.btn.btn-bordered.disabled-button,.btn.btn-primary.btn-bordered.disabled-button{opacity:.5}.btn.btn-bordered.disabled-button .button,.btn.btn-primary.btn-bordered.disabled-button .button{opacity:1}.btn.btn-default.btn-bordered{border:1px solid #fff;color:#fff;background-color:transparent;box-shadow:none}.btn.btn-default.btn-bordered:hover{border-color:#1483ff!important;color:#1483ff!important}.btn.btn-default.btn-bordered.disabled-button{opacity:.5}.btn.btn-default.btn-bordered.disabled-button .button{opacity:1}.btn.btn-file{cursor:pointer;padding:0}.btn.btn-file label{display:block;cursor:pointer;padding:.35em .75em}.btn.btn-file[disabled] label{cursor:not-allowed}.btn.btn-file input[type=file]{pointer-events:none;position:absolute;left:-9999px}.ngx-file-button{display:inline-block;box-sizing:border-box;position:relative}.ngx-file-button .ngx-file-button-input{position:absolute;left:-9999px}.ngx-file-button .ngx-file-button-label{cursor:pointer}.ngx-file-button.standard-style .icon-check{display:none}.ngx-file-button.standard-style .ngx-file-button-text{font-size:.9rem;margin-left:8px;color:#696969}.ngx-file-button.progress-style{min-width:150px;text-align:center;transition:all .3s ease .3s;max-height:50px;overflow:hidden}.ngx-file-button.progress-style .ngx-file-button-button{width:100%;background:#455066;border:none;border-radius:50px;padding:5px 0;transition:all .3s ease;position:relative;margin:0}.ngx-file-button.progress-style .ngx-file-button-button:focus:not(.disabled),.ngx-file-button.progress-style .ngx-file-button-button:focus:not([disabled]),.ngx-file-button.progress-style .ngx-file-button-button:hover:not(.disabled),.ngx-file-button.progress-style .ngx-file-button-button:hover:not([disabled]){background:#313847}.ngx-file-button.progress-style .ngx-file-button-button .ngx-file-button-label{color:#cfcfcf;font-size:18px;font-weight:400;line-height:40px;max-height:40px;transition:all .3s ease;cursor:pointer;display:block}.ngx-file-button.progress-style .ngx-file-button-button.disabled .ngx-file-button-label,.ngx-file-button.progress-style .ngx-file-button-button[disabled] .ngx-file-button-label{cursor:not-allowed}.ngx-file-button.progress-style .ngx-file-button-button .ngx-file-button-text{display:none}.ngx-file-button.progress-style .ngx-file-button-fill{position:absolute;top:0;left:0;bottom:0;right:0;width:0;background:#479eff;border-radius:50px;display:none}.ngx-file-button.progress-style .icon-check{font-size:25px;color:#cfcfcf;position:absolute;top:0;left:0;right:0;bottom:0;line-height:50px;transform:scale(0)}.ngx-file-button.progress-style.active{padding:0}.ngx-file-button.progress-style.active .ngx-file-button-button{background:#696969;margin-top:25px}.ngx-file-button.progress-style.active .ngx-file-button-fill{display:block;margin-top:25px;transition:all .1s ease .1s}.ngx-file-button.progress-style.active .ngx-file-button-label{display:none}.ngx-file-button.progress-style.success .ngx-file-button-button{margin:0;padding:25px;width:50px;background:#479eff}.ngx-file-button.progress-style.success .ngx-file-button-fill,.ngx-file-button.progress-style.success .ngx-file-button-label{display:none}.ngx-file-button.progress-style.success .icon-check{transform:scale(1);transition:all .3s ease .3s}"]
            },] }
];
FileButtonComponent.ctorParameters = () => [
    { type: NgZone }
];
FileButtonComponent.propDecorators = {
    id: [{ type: Input }],
    name: [{ type: Input }],
    styleType: [{ type: Input }],
    uploader: [{ type: Input }],
    options: [{ type: Input }],
    disabled: [{ type: Input }],
    multiple: [{ type: Input }],
    afterAddingFile: [{ type: Output }],
    beforeUploadItem: [{ type: Output }],
    successItem: [{ type: Output }],
    errorItem: [{ type: Output }],
    progressAll: [{ type: Output }],
    dropzoneTemplate: [{ type: ContentChild, args: ['dropzoneTemplate',] }],
    fileInput: [{ type: ViewChild, args: ['fileInput',] }]
};
//# sourceMappingURL=data:application/json;base64,