import { Component, Input, Output, EventEmitter, HostListener, forwardRef, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
let nextId = 0;
const SLIDER_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => SliderComponent),
    multi: true
};
const edge = window.navigator.userAgent.indexOf('Edge') > -1;
export class SliderComponent {
    constructor(cdr) {
        this.cdr = cdr;
        this.id = `range-${++nextId}`;
        this.min = 0;
        this.max = 100;
        this.step = 1;
        this.orientation = 'horizontal';
        this.filled = false;
        this.multiple = false;
        this.disabled = false;
        this.showTicks = false;
        this.change = new EventEmitter();
        this._values = [0];
        this._percents = [0];
        this._thumbs = [];
        this._ticks = [];
        this._active = [];
        this.onChangeCallback = () => {
            // placeholder
        };
        this.onTouchedCallback = () => {
            // placeholder
        };
    }
    get value() {
        if (!this._values)
            return 0;
        if (this.multiple)
            return [...this._values].sort((a, b) => a - b).join(',');
        return this._values[0];
    }
    set value(val) {
        val = ('' + val).split(',');
        if (String(val) !== String(this._values)) {
            this.setValues(val);
            this.onChangeCallback(this._values);
            this.change.emit({
                value: this._values,
                percent: this.percent
            });
            this.cdr.markForCheck();
        }
    }
    get percent() {
        const pct = this._percents;
        if (this.multiple)
            return pct.join(',');
        return '' + pct[0];
    }
    get isHorizontal() {
        return this.orientation === 'horizontal';
    }
    get isVertical() {
        return this.orientation === 'vertical';
    }
    ngOnInit() {
        if (this.showTicks) {
            this._ticks = this.getTicks();
        }
        this.setValues([0]);
    }
    setValues(values) {
        this._values = values;
        this._percents = values
            .map(v => Math.max(this.min, Math.min(this.max, v)))
            .map(v => Math.round((100 * (v - this.min)) / (this.max - this.min)));
        this._thumbs = this._percents.map(p => {
            return {
                left: `calc(${p}% - ${p / 100}em)`
            };
        });
        if (this.filled) {
            this._fill = this.getFill();
        }
        if (this.showTicks) {
            this._ticks = this.getTicks();
        }
    }
    setActive(index, active) {
        this._active[index] = active;
    }
    setValue(val, index) {
        if (this._values[index] !== val) {
            this._values[index] = val;
            this.setValues(this._values);
            this.onChangeCallback(this.value);
            this.change.emit({
                value: this.value,
                percent: this.percent
            });
        }
    }
    getCount() {
        const idxs = [];
        const step = this.tickStep || this.step;
        let i = this.min;
        while (i <= this.max) {
            idxs.push(i);
            i += step;
        }
        return idxs;
    }
    getTicks() {
        return this.getCount().map(p => {
            return {
                left: `calc(${p}% - ${p / 100 - 0.5}em)`
            };
        });
    }
    getFill() {
        if (this.filled) {
            const percentMin = this.multiple ? Math.min(...this._percents) : 0;
            const percentMax = this.multiple ? Math.max(...this._percents) : this._percents[0];
            const width = percentMax - percentMin;
            if (edge && this.multiple) {
                return {
                    left: `calc(${percentMin}% - ${percentMin / 100 - 0.5}em)`,
                    'background-size': `calc(${width}% - ${width / 100}em) 100%`
                };
            }
            return {
                left: `${percentMin}%`,
                'background-size': `${width}% 100%`
            };
        }
    }
    onMouseDown(event) {
        event.stopPropagation();
        this.active = true;
    }
    onMouseUp(event) {
        event.stopPropagation();
        this.active = false;
    }
    onChange(event) {
        event.stopPropagation();
        this.change.emit({
            value: this.value,
            percent: this.percent
        });
    }
    writeValue(val) {
        val = val ? String(val).split(',') : ['0'];
        if (String(val) !== String(this._values)) {
            this.setValues(val.map(v => +v));
            this.cdr.markForCheck();
        }
    }
    registerOnChange(fn) {
        this.onChangeCallback = fn;
    }
    registerOnTouched(fn) {
        this.onTouchedCallback = fn;
    }
    trackIndex(index) {
        return index;
    }
}
SliderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-slider',
                exportAs: 'ngxSlider',
                template: "<div class=\"slider-inner\">\n  <div class=\"ticks-container\" *ngIf=\"showTicks\">\n    <div class=\"tick\" *ngFor=\"let s of _ticks\" [ngStyle]=\"s\"></div>\n  </div>\n  <div class=\"inputs\">\n    <div class=\"slider-track\"></div>\n    <span *ngIf=\"filled\" [ngStyle]=\"_fill\" class=\"fill-bar\"> </span>\n    <ng-container *ngFor=\"let value of _values; let i = index; let odd = odd; trackBy: trackIndex\">\n      <input\n        type=\"range\"\n        [id]=\"id + '-' + i\"\n        [attr.list]=\"id + '-list'\"\n        [attr.orientation]=\"orientation\"\n        [class.odd]=\"odd\"\n        [class.active]=\"_active[i]\"\n        [ngModel]=\"value\"\n        (ngModelChange)=\"setValue($event, i)\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [step]=\"step\"\n        [disabled]=\"disabled\"\n        (input)=\"onChange($event)\"\n        (change)=\"onChange($event)\"\n        (mouseenter)=\"setActive(i, true)\"\n        (mouseleave)=\"setActive(i, false)\"\n      />\n      <div class=\"slider-thumb\" [class.active]=\"_active[i]\" [ngStyle]=\"_thumbs[i]\"></div>\n    </ng-container>\n  </div>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                providers: [SLIDER_VALUE_ACCESSOR],
                host: {
                    class: 'ngx-slider',
                    '[class.filled]': 'filled',
                    '[class.multiple]': 'multiple',
                    '[class.disabled]': 'disabled',
                    '[class.active]': 'active',
                    '[class.vertical]': 'isVertical',
                    '[class.horizontal]': 'isHorizontal'
                },
                styles: [".ngx-slider .slider-inner{margin:1em auto;position:relative;display:inline-block}.ngx-slider .inputs{position:releative;min-width:12.5em;height:1em}.ngx-slider .inputs input[type=range]{position:absolute;top:0;left:0;width:100%;height:100%;opacity:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:transparent}.ngx-slider .inputs input[type=range]::-webkit-slider-runnable-track{cursor:pointer;color:transparent;background:transparent;border-color:transparent;-webkit-appearance:none;appearance:none}.ngx-slider .inputs input[type=range]::-moz-range-track{cursor:pointer;color:transparent;background:transparent;border-color:transparent;-moz-appearance:none;appearance:none}.ngx-slider .inputs input[type=range]::-ms-track{color:transparent;background:transparent;border-color:transparent;appearance:none;cursor:pointer}.ngx-slider .inputs input[type=range]::-webkit-slider-thumb{width:1em;height:1em;-webkit-appearance:none;appearance:none;position:relative;background:transparent;border:transparent;cursor:pointer;z-index:100;color:transparent;z-index:301}.ngx-slider .inputs input[type=range]::-moz-range-thumb{width:1em;height:1em;-moz-appearance:none;appearance:none;position:relative;background:transparent;border:transparent;cursor:pointer;z-index:100;transform:scale(1);z-index:302}.ngx-slider .inputs input[type=range]::-ms-thumb{width:1em;height:1em;appearance:none;position:relative;background:transparent;border:transparent;cursor:pointer;z-index:100;transform:scale(1);z-index:302}.ngx-slider .inputs input[type=range]:focus{outline:none}.ngx-slider .inputs .slider-track{position:absolute;background-color:#479eff;width:100%;height:2px;top:calc(.5em - 1px);pointer-events:none;opacity:.3}.ngx-slider .inputs .slider-thumb{position:absolute;background-color:#479eff;height:1em;width:1em;border-radius:.5em;pointer-events:none;z-index:100;box-shadow:0 0 0 0 rgba(71,158,255,.3);transition:box-shadow .3s ease-in-out}.ngx-slider .inputs .slider-thumb.active{box-shadow:0 0 0 5px rgba(71,158,255,.3)}.ngx-slider .ticks-container{position:absolute;display:block;top:0;width:100%;height:3px;opacity:.3}.ngx-slider .ticks-container .tick{position:absolute;border:none;height:100%;width:2px;background-color:#479eff}.ngx-slider.filled .fill-bar{background-repeat:no-repeat;background-image:linear-gradient(#479eff,#479eff);position:absolute;border-radius:0;z-index:99;pointer-events:none;height:4px;left:0;top:calc(50% - 2px);width:100%}.ngx-slider.vertical{display:inline-block;height:auto;min-height:12.5em;width:1em}.ngx-slider.vertical .slider-inner{transform:translateY(-100%) rotate(-90deg) translate(-100%);transform-origin:top left}@supports (-ms-ime-align:auto){.ngx-slider.multiple .inputs input[type=range]{position:relative;display:block;-webkit-appearance:slider-vertical;-moz-appearance:slider-vertical;appearance:slider-vertical}.ngx-slider.multiple .inputs input[type=range]::-webkit-slider-runnable-track{-webkit-animation:none 0s ease 0s 1 normal none running;animation:none 0s ease 0s 1 normal none running;-webkit-backface-visibility:visible;backface-visibility:visible;background:transparent none repeat 0 0/auto auto padding-box border-box scroll;border:none;border-collapse:separate;border-image:none;border-radius:0;border-spacing:0;bottom:auto;box-shadow:none;box-sizing:content-box;caption-side:top;clear:none;clip:auto;color:#000;column-fill:balance;grid-column-gap:normal;column-gap:normal;column-rule:medium none currentColor;column-span:1;columns:auto;content:normal;counter-increment:none;counter-reset:none;cursor:auto;direction:ltr;display:inline;empty-cells:show;float:none;font-family:serif;font-size:medium;font-style:normal;font-feature-settings:normal;font-variant:normal;font-weight:400;font-stretch:normal;line-height:normal;height:auto;-webkit-hyphens:none;hyphens:none;left:auto;letter-spacing:normal;list-style:disc none outside;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;orphans:2;outline:medium none invert;overflow:visible;overflow-x:visible;overflow-y:visible;padding:0;page-break-after:auto;page-break-before:auto;page-break-inside:auto;perspective:none;perspective-origin:50% 50%;position:static;right:auto;tab-size:8;table-layout:auto;text-align:left;text-align-last:auto;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;top:auto;transform:none;transform-origin:50% 50% 0;transform-style:flat;-webkit-transition:none 0s ease 0s;transition:none 0s ease 0s;unicode-bidi:normal;vertical-align:baseline;visibility:visible;white-space:normal;widows:2;width:auto;word-spacing:normal;z-index:auto;all:initial;-webkit-appearance:initial;appearance:auto}.ngx-slider.multiple .inputs input[type=range]::-ms-track{animation:none 0s ease 0s 1 normal none running;backface-visibility:visible;background:transparent none repeat 0 0/auto auto padding-box border-box scroll;border-collapse:separate;border-image:none;border-radius:0;border-spacing:0;bottom:auto;box-shadow:none;box-sizing:content-box;caption-side:top;clear:none;clip:auto;color:#000;column-fill:balance;grid-column-gap:normal;column-gap:normal;column-rule:medium none currentColor;column-span:1;columns:auto;content:normal;counter-increment:none;counter-reset:none;cursor:auto;direction:ltr;display:inline;empty-cells:show;float:none;font-family:serif;font-size:medium;font-style:normal;font-feature-settings:normal;font-variant:normal;font-weight:400;font-stretch:normal;line-height:normal;height:auto;hyphens:none;left:auto;letter-spacing:normal;list-style:disc none outside;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;orphans:2;outline:medium none invert;overflow:visible;overflow-x:visible;overflow-y:visible;padding:0;page-break-after:auto;page-break-before:auto;page-break-inside:auto;perspective:none;perspective-origin:50% 50%;position:static;right:auto;tab-size:8;table-layout:auto;text-align:left;text-align-last:auto;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;top:auto;transform:none;transform-origin:50% 50% 0;transform-style:flat;-ms-transition:none 0s ease 0s;transition:none 0s ease 0s;unicode-bidi:normal;vertical-align:baseline;visibility:visible;white-space:normal;widows:2;width:auto;word-spacing:normal;z-index:auto;all:initial;appearance:auto;color:transparent;background-color:transparentl;border:none;opacity:0;height:2px}.ngx-slider.multiple .inputs input[type=range]::-webkit-slider-thumb{-webkit-animation:none 0s ease 0s 1 normal none running;animation:none 0s ease 0s 1 normal none running;-webkit-backface-visibility:visible;backface-visibility:visible;background:transparent none repeat 0 0/auto auto padding-box border-box scroll;border:none;border-collapse:separate;border-image:none;border-radius:0;border-spacing:0;bottom:auto;box-shadow:none;box-sizing:content-box;caption-side:top;clear:none;clip:auto;color:#000;column-fill:balance;grid-column-gap:normal;column-gap:normal;column-rule:medium none currentColor;column-span:1;columns:auto;content:normal;counter-increment:none;counter-reset:none;cursor:auto;direction:ltr;display:inline;empty-cells:show;float:none;font-family:serif;font-size:medium;font-style:normal;font-feature-settings:normal;font-variant:normal;font-weight:400;font-stretch:normal;line-height:normal;height:auto;-webkit-hyphens:none;hyphens:none;left:auto;letter-spacing:normal;list-style:disc none outside;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;orphans:2;outline:medium none invert;overflow:visible;overflow-x:visible;overflow-y:visible;padding:0;page-break-after:auto;page-break-before:auto;page-break-inside:auto;perspective:none;perspective-origin:50% 50%;position:static;right:auto;tab-size:8;table-layout:auto;text-align:left;text-align-last:auto;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;top:auto;transform:none;transform-origin:50% 50% 0;transform-style:flat;-webkit-transition:none 0s ease 0s;transition:none 0s ease 0s;unicode-bidi:normal;vertical-align:baseline;visibility:visible;white-space:normal;widows:2;width:auto;word-spacing:normal;z-index:auto;all:initial;-webkit-appearance:initial;appearance:auto}.ngx-slider.multiple .inputs input[type=range]::-ms-thumb{animation:none 0s ease 0s 1 normal none running;backface-visibility:visible;background:transparent none repeat 0 0/auto auto padding-box border-box scroll;border-collapse:separate;border-image:none;border-spacing:0;bottom:auto;box-shadow:none;box-sizing:content-box;caption-side:top;clear:none;clip:auto;color:#000;column-fill:balance;grid-column-gap:normal;column-gap:normal;column-rule:medium none currentColor;column-span:1;columns:auto;content:normal;counter-increment:none;counter-reset:none;cursor:auto;direction:ltr;display:inline;empty-cells:show;float:none;font-family:serif;font-size:medium;font-style:normal;font-feature-settings:normal;font-variant:normal;font-weight:400;font-stretch:normal;line-height:normal;height:auto;hyphens:none;left:auto;letter-spacing:normal;list-style:disc none outside;margin:0;max-height:none;max-width:none;min-height:0;min-width:0;opacity:1;orphans:2;outline:medium none invert;overflow:visible;overflow-x:visible;overflow-y:visible;padding:0;page-break-after:auto;page-break-before:auto;page-break-inside:auto;perspective:none;perspective-origin:50% 50%;position:static;right:auto;tab-size:8;table-layout:auto;text-align:left;text-align-last:auto;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;top:auto;transform:none;transform-origin:50% 50% 0;transform-style:flat;-ms-transition:none 0s ease 0s;transition:none 0s ease 0s;unicode-bidi:normal;vertical-align:baseline;visibility:visible;white-space:normal;widows:2;width:auto;word-spacing:normal;z-index:auto;all:initial;color:transparent;background-color:transparent;appearance:auto;border-radius:0;height:1px;width:1px;border:.5em solid transparent;border-top-color:#479eff}.ngx-slider.multiple .inputs input[type=range].odd::-ms-thumb{border:.5em solid transparent;border-bottom-color:#479eff}.ngx-slider.multiple .slider-track{height:100%;left:.5em;width:calc(100% - 1em)}.ngx-slider.multiple .slider-thumb{display:none}.ngx-slider.multiple .fill-bar{height:100%;margin-top:1px;opacity:.6}}"]
            },] }
];
SliderComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
SliderComponent.propDecorators = {
    id: [{ type: Input }],
    min: [{ type: Input }],
    max: [{ type: Input }],
    step: [{ type: Input }],
    orientation: [{ type: Input }],
    filled: [{ type: Input }],
    multiple: [{ type: Input }],
    disabled: [{ type: Input }],
    showTicks: [{ type: Input }],
    tickStep: [{ type: Input }],
    change: [{ type: Output }],
    onMouseDown: [{ type: HostListener, args: ['mousedown', ['$event'],] }],
    onMouseUp: [{ type: HostListener, args: ['mouseup', ['$event'],] }]
};
//# sourceMappingURL=data:application/json;base64,