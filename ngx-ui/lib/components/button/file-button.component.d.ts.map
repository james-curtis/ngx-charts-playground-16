{"version":3,"file":"file-button.component.d.ts","sources":["file-button.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, NgZone, OnInit, TemplateRef, ElementRef } from '@angular/core';\nimport { FileUploaderOptions, FileUploader, FileItem } from '@swimlane/ng2-file-upload';\nimport { FileButtonStyleType } from './file-button-style.type';\nexport declare class FileButtonComponent implements OnInit {\n    readonly _ngZone: NgZone;\n    id: string;\n    name: string;\n    styleType: FileButtonStyleType;\n    uploader: FileUploader;\n    options: FileUploaderOptions;\n    get disabled(): boolean;\n    set disabled(disabled: boolean);\n    get multiple(): boolean;\n    set multiple(multiple: boolean);\n    afterAddingFile: EventEmitter<{\n        fileItem: FileItem;\n    }>;\n    beforeUploadItem: EventEmitter<{\n        fileItem: FileItem;\n    }>;\n    successItem: EventEmitter<{\n        item: any;\n        response: string;\n        status: number;\n        headers: any;\n    }>;\n    errorItem: EventEmitter<{\n        response: string;\n        status: number;\n        headers: any;\n    }>;\n    progressAll: EventEmitter<{\n        progress: number;\n    }>;\n    readonly dropzoneTemplate: TemplateRef<any>;\n    readonly fileInput?: ElementRef<HTMLInputElement>;\n    get isDisabled(): boolean;\n    get cssClasses(): any;\n    readonly FileButtonStyleType: typeof FileButtonStyleType;\n    progress: number;\n    fileName: string;\n    fileOverDropzone: boolean;\n    private _isItemSuccessful;\n    private _disabled;\n    private _multiple;\n    constructor(_ngZone: NgZone);\n    ngOnInit(): void;\n    onAfterAddingFile(fileItem: FileItem): void;\n    onBeforeUploadItem(fileItem: FileItem): void;\n    onErrorItem(response: string, status: number, headers: any): void;\n    onProgressAll(progress: number): void;\n    onSuccessItem(item: any, response: string, status: number, headers: any): void;\n    fileOverBase(event: boolean): void;\n    clearInput(): void;\n}\n"]}