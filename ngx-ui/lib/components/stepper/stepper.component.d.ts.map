{"version":3,"file":"stepper.component.d.ts","sources":["stepper.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, OnDestroy, QueryList } from '@angular/core';\nimport { StepComponent } from './step.component';\nimport { StepperAnimationStates } from './stepper-animation-states.enum';\nimport { StepperBarAnimationStates } from './stepper-bar-animation-states.enum';\nimport { StepperPosition } from './stepper-position.enum';\nexport declare class StepperComponent implements OnDestroy {\n    private readonly _cdr;\n    position: StepperPosition;\n    get completeIcon(): string;\n    set completeIcon(v: string);\n    get active(): number;\n    set active(v: number);\n    get readonly(): boolean;\n    set readonly(v: boolean);\n    get progress(): boolean;\n    set progress(v: boolean);\n    get large(): boolean;\n    set large(v: boolean);\n    get removeHighlight(): boolean;\n    set removeHighlight(v: boolean);\n    get trackBar(): boolean;\n    set trackBar(v: boolean);\n    activeChange: EventEmitter<number>;\n    get steps(): QueryList<StepComponent>;\n    set steps(v: QueryList<StepComponent>);\n    get completeSteps(): number;\n    get vertical(): boolean;\n    get barState(): StepperBarAnimationStates;\n    readonly StepperPosition: typeof StepperPosition;\n    private _active;\n    private _readonly;\n    private _trackBar;\n    private _progress;\n    private _large;\n    private _removeHighlight;\n    private _completeIcon;\n    private _steps?;\n    private _barState;\n    private readonly _destroy$;\n    constructor(_cdr: ChangeDetectorRef);\n    ngOnDestroy(): void;\n    previous(): void;\n    next(): void;\n    first(): void;\n    last(): void;\n    complete(): void;\n    onResize(): void;\n    onStepAnimationStart(i: number): void;\n    onStepAnimationEnd(i: number): void;\n    getStepState(i: number): StepperAnimationStates;\n}\n"]}