{"version":3,"file":"radiobutton-group.component.d.ts","sources":["radiobutton-group.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, QueryList, OnDestroy, AfterContentInit, ChangeDetectorRef, OnChanges } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { RadioButtonComponent } from './radiobutton.component';\nexport declare class RadioButtonGroupComponent implements ControlValueAccessor, OnDestroy, OnChanges, AfterContentInit {\n    private readonly _cdr;\n    readonly UNIQUE_ID: string;\n    id: string;\n    get disabled(): boolean;\n    set disabled(disabled: boolean);\n    get value(): any;\n    set value(value: any);\n    get name(): string;\n    set name(name: string);\n    change: EventEmitter<boolean>;\n    blur: EventEmitter<Event>;\n    focus: EventEmitter<FocusEvent>;\n    readonly _radios: QueryList<RadioButtonComponent>;\n    get selected(): RadioButtonComponent;\n    private _name;\n    private _value;\n    private _selected;\n    private _disabled;\n    private _destroy$;\n    constructor(_cdr: ChangeDetectorRef);\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    ngOnChanges(): void;\n    subscribeToRadios(): void;\n    onRadioSelected(value: string): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    onChangeCallback(_: any): void;\n    onTouchedCallback(): void;\n    private _updateRadioButtonNames;\n    private _updateSelectedRadioFromValue;\n    private _updateRadioDisabledState;\n}\n"]}