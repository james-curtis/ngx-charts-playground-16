{"version":3,"file":"tooltip.directive.d.ts","sources":["tooltip.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, NgZone, OnDestroy, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { PlacementTypes } from '../../utils/position/placement-type.enum';\nimport { AlignmentTypes } from '../../utils/position/alignment-types.enum';\nimport { ShowTypes } from './show-types.enum';\nimport { StyleTypes } from './style-types.enum';\nimport { TooltipService } from './tooltip.service';\nexport declare class TooltipDirective implements OnDestroy {\n    private readonly ngZone;\n    private readonly tooltipService;\n    private readonly viewContainerRef;\n    private readonly renderer;\n    private readonly element;\n    tooltipCssClass: string;\n    tooltipTitle: string;\n    tooltipPlacement: PlacementTypes;\n    tooltipAlignment: AlignmentTypes;\n    tooltipType: StyleTypes;\n    tooltipTemplate: TemplateRef<any>;\n    tooltipShowEvent: ShowTypes;\n    tooltipContext: any;\n    get tooltipSpacing(): number;\n    set tooltipSpacing(val: number);\n    get tooltipDisabled(): boolean;\n    set tooltipDisabled(val: boolean);\n    get tooltipShowCaret(): boolean;\n    set tooltipShowCaret(val: boolean);\n    get tooltipCloseOnClickOutside(): boolean;\n    set tooltipCloseOnClickOutside(val: boolean);\n    get tooltipCloseOnMouseLeave(): boolean;\n    set tooltipCloseOnMouseLeave(val: boolean);\n    get tooltipHideTimeout(): number;\n    set tooltipHideTimeout(val: number);\n    get tooltipShowTimeout(): number;\n    set tooltipShowTimeout(val: number);\n    show: EventEmitter<boolean>;\n    hide: EventEmitter<boolean>;\n    private _tooltipSpacing;\n    private _tooltipDisabled;\n    private _tooltipShowCaret;\n    private _tooltipCloseOnClickOutside;\n    private _tooltipCloseOnMouseLeave;\n    private _tooltipHideTimeout;\n    private _tooltipShowTimeout;\n    private get listensForFocus();\n    private get listensForHover();\n    private component;\n    private timeout;\n    private mouseLeaveContentEvent;\n    private mouseEnterContentEvent;\n    private documentClickEvent;\n    constructor(ngZone: NgZone, tooltipService: TooltipService, viewContainerRef: ViewContainerRef, renderer: Renderer2, element: ElementRef<HTMLElement>);\n    ngOnDestroy(): void;\n    onFocus(): void;\n    onBlur(): void;\n    onMouseEnter(): void;\n    onMouseLeave(event: {\n        toElement: Node;\n    }): void;\n    onMouseClick(): void;\n    showTooltip(immediate?: boolean): void;\n    hideTooltip(immediate?: boolean): void;\n    addHideListeners(tooltip: HTMLElement): void;\n    private createBoundOptions;\n}\n"]}