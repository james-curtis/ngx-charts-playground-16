{"version":3,"file":"hotkeys.service.d.ts","sources":["hotkeys.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { NgZone } from '@angular/core';\nimport { Hotkey } from './hotkey.interface';\nexport declare function _add(combo: string, opts: Hotkey): Hotkey;\nexport declare function _suspend(comp: any): void;\nexport declare function _pauseOthers(comp?: any): void;\nexport declare function _unpauseOthers(comp?: any): void;\nexport declare function _activate(comp: any): void;\nexport declare function _deregister(comp: any): void;\nexport declare function Hotkey(key: string, description: string, options?: Partial<Hotkey>): (target: any, name: string) => void;\nexport declare class HotkeysService {\n    private readonly ngZone;\n    readonly suspend: typeof _suspend;\n    readonly activate: typeof _activate;\n    readonly deregister: typeof _deregister;\n    readonly pauseOthers: typeof _pauseOthers;\n    readonly unpauseOthers: typeof _unpauseOthers;\n    readonly changeEvent: import(\"rxjs\").Observable<{\n        [combo: string]: Hotkey[];\n    }>;\n    get hotkeys(): {\n        [combo: string]: Hotkey[];\n    };\n    constructor(ngZone: NgZone);\n    add(combo: string, opts: Hotkey): Hotkey;\n    clear(): void;\n}\n"]}