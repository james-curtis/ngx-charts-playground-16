{"version":3,"file":"select-dropdown.component.d.ts","sources":["select-dropdown.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, TemplateRef } from '@angular/core';\nimport { SelectDropdownOption } from './select-dropdown-option.interface';\nexport declare class SelectDropdownComponent implements AfterViewInit {\n    private readonly elementRef;\n    private readonly cdr;\n    selected: any[];\n    identifier: any;\n    filterPlaceholder: string;\n    filterEmptyPlaceholder: string;\n    emptyPlaceholder: string;\n    allowAdditionsText: string | TemplateRef<any>;\n    get tagging(): boolean;\n    set tagging(tagging: boolean);\n    get allowAdditions(): boolean;\n    set allowAdditions(allowAdditions: boolean);\n    get filterable(): boolean;\n    set filterable(filterable: boolean);\n    get filterCaseSensitive(): boolean;\n    set filterCaseSensitive(filterCaseSensitive: boolean);\n    get focusIndex(): number;\n    set focusIndex(val: number);\n    get filterQuery(): string;\n    set filterQuery(val: string);\n    get groupBy(): string;\n    set groupBy(val: string);\n    groupByTemplate: TemplateRef<unknown>;\n    get options(): SelectDropdownOption[];\n    set options(val: SelectDropdownOption[]);\n    keyup: EventEmitter<{\n        event: KeyboardEvent;\n        value?: string;\n    }>;\n    selection: EventEmitter<SelectDropdownOption>;\n    close: EventEmitter<boolean>;\n    readonly filterInput?: ElementRef<HTMLInputElement>;\n    get element(): any;\n    get isNotTemplate(): boolean;\n    groups: any[];\n    filterQueryIsInOptions: boolean;\n    private _options;\n    private _groupBy;\n    private _filterQuery;\n    private _focusIndex;\n    private _tagging;\n    private _allowAdditions;\n    private _filterable;\n    private _filterCaseSensitive;\n    constructor(elementRef: ElementRef, cdr: ChangeDetectorRef);\n    ngAfterViewInit(): void;\n    isSelected(option: SelectDropdownOption): boolean;\n    updatefilterQueryIsInOptions(): void;\n    clearFilter(filterInput: HTMLInputElement): void;\n    onInputKeyUp(event: KeyboardEvent): void;\n    onOptionKeyDown(event: KeyboardEvent, option?: SelectDropdownOption): void;\n    onAddClicked(event: Event, value: any): void;\n    onShiftEnterKeyDown(event: any): void;\n    private focusElement;\n    private calculateGroups;\n}\n"]}