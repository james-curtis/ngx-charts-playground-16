{"version":3,"file":"checkbox.component.d.ts","sources":["checkbox.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare class CheckboxComponent implements ControlValueAccessor {\n    private readonly cdr;\n    id: string;\n    name?: string;\n    diameter: string;\n    get tabindex(): number;\n    set tabindex(v: number);\n    get disabled(): boolean;\n    set disabled(v: boolean);\n    get round(): boolean;\n    set round(v: boolean);\n    change: EventEmitter<Event>;\n    blur: EventEmitter<FocusEvent>;\n    focus: EventEmitter<FocusEvent>;\n    set value(value: boolean);\n    get value(): boolean;\n    private _value;\n    private _tabindex;\n    private _disabled;\n    private _round;\n    constructor(cdr: ChangeDetectorRef);\n    onBlur(_: any): void;\n    toggle(): void;\n    writeValue(value: boolean): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState(disabled: boolean): void;\n    private onTouchedCallback;\n    private onChangeCallback;\n}\n"]}