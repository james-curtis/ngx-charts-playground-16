{"version":3,"file":"code-editor.component.d.ts","sources":["code-editor.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, Renderer2, EventEmitter, AfterViewInit } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/yaml/yaml.js';\nimport 'codemirror/mode/python/python.js';\nimport 'codemirror/mode/powershell/powershell.js';\nimport 'codemirror/mode/javascript/javascript.js';\nimport 'codemirror/mode/htmlmixed/htmlmixed.js';\nimport 'codemirror/mode/spreadsheet/spreadsheet.js';\nimport 'codemirror/mode/handlebars/handlebars.js';\nimport './mustache';\nimport 'codemirror/addon/lint/lint.js';\nimport 'codemirror/addon/search/search.js';\nimport 'codemirror/addon/search/searchcursor.js';\nimport 'codemirror/addon/search/jump-to-line.js';\nimport 'codemirror/addon/dialog/dialog.js';\nimport 'codemirror/addon/fold/foldcode.js';\nimport 'codemirror/addon/fold/foldgutter.js';\nimport 'codemirror/addon/fold/indent-fold.js';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/mode/overlay.js';\nimport { HintCompletion } from './hint-completion.interface';\nexport declare class CodeEditorComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n    private readonly renderer;\n    config: any;\n    theme: string;\n    readOnly: string | boolean;\n    allowDropFileTypes: string[];\n    gutters: Array<string | {\n        className: string;\n        style?: string;\n    }>;\n    mode?: any;\n    lint?: any;\n    autocompleteTokens?: Array<string | HintCompletion>;\n    get autofocus(): boolean;\n    set autofocus(autofocus: boolean);\n    get lineNumbers(): boolean;\n    set lineNumbers(lineNumbers: boolean);\n    change: EventEmitter<any>;\n    blur: EventEmitter<any>;\n    host: any;\n    content: any;\n    instance: CodeMirror.EditorFromTextArea;\n    _value: string;\n    get value(): string;\n    set value(val: string);\n    private _autofocus;\n    private _lineNumbers;\n    constructor(renderer: Renderer2);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    cleanCode(code: string): string;\n    onVisible(): void;\n    onKeyUp(cm: CodeMirror.EditorFromTextArea, event: KeyboardEvent): void;\n    onChange(): void;\n    onBlur(): void;\n    updateValue(value: string): void;\n    writeValue(val: string): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    private onTouchedCallback;\n    private onChangeCallback;\n    private autocomplete;\n}\n"]}